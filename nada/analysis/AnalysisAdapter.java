/* This file was generated by SableCC (http://www.sablecc.org/). */

package nada.analysis;

import java.util.*;
import nada.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANada(ANada node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubprogramBody(ASubprogramBody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADeclPart(ADeclPart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAObjDeclBasicDecl(AObjDeclBasicDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumDeclBasicDecl(ANumDeclBasicDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASpbDeclBasicDecl(ASpbDeclBasicDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAObjectDecl(AObjectDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumberDecl(ANumberDecl node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentList(AIdentList node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAnotherIdent(AAnotherIdent node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEnumTypedef(AEnumTypedef node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASubprogramSpec(ASubprogramSpec node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFormalPart(AFormalPart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAParamSpec(AParamSpec node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAnotherParamSpec(AAnotherParamSpec node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStmtSeq(AStmtSeq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleStmtStatement(ASimpleStmtStatement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseACompoundStmtStatement(ACompoundStmtStatement node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANullStmtSimpleStmt(ANullStmtSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssignStmtSimpleStmt(AAssignStmtSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProcCallStmtSimpleStmt(AProcCallStmtSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWriteSimpleStmt(AWriteSimpleStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfCompoundCompoundStmt(AIfCompoundCompoundStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALoopCompoundCompoundStmt(ALoopCompoundCompoundStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANullStmt(ANullStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssignStmt(AAssignStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWriteWriteStmt(AWriteWriteStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWritelnWriteStmt(AWritelnWriteStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfStmt(AIfStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAElseifClause(AElseifClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAElseClause(AElseClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALoopStmt(ALoopStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAProcCallStmt(AProcCallStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAActualParamPart(AActualParamPart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAnotherParam(AAnotherParam node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARelation(ARelation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseARelationClause(ARelationClause node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStringLitWriteExpr(AStringLitWriteExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleExprWriteExpr(ASimpleExprWriteExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASimpleExpr(ASimpleExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATermSimpleExpr(ATermSimpleExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATerm(ATerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFactorTerm(AFactorTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFactorFactor(AFactorFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANegPrimFactor(ANegPrimFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumLitPrimary(ANumLitPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANamePrimary(ANamePrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAExprPrimary(AExprPrimary node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEqRelOp(AEqRelOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANeqRelOp(ANeqRelOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALtRelOp(ALtRelOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALeRelOp(ALeRelOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGtRelOp(AGtRelOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGeRelOp(AGeRelOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusAddOp(APlusAddOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusAddOp(AMinusAddOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultMulOp(AMultMulOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivMulOp(ADivMulOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAModMulOp(AModMulOp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhitespace(TWhitespace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProc(TProc node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNull(TNull node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThen(TThen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElseif(TElseif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLoop(TLoop node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBegin(TBegin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnd(TEnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEndif(TEndif node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTConst(TConst node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOut(TOut node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIs(TIs node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWrite(TWrite node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWriteln(TWriteln node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLParen(TLParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRParen(TRParen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLe(TLe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGe(TGe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGets(TGets node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdent(TIdent node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumberLit(TNumberLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTStringLit(TStringLit node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLinecmnt(TLinecmnt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    @Override
    public void caseInvalidToken(InvalidToken node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
