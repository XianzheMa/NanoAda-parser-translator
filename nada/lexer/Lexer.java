/* This file was generated by SableCC (http://www.sablecc.org/). */

package nada.lexer;

import java.io.*;
import nada.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhitespace(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProc(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNull(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThen(text, line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElseif(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLoop(text, line, pos); }
    Token new8(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(text, line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBegin(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnd(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEndif(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TConst(text, line, pos); }
    Token new13(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOut(text, line, pos); }
    Token new14(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIs(text, line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWrite(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWriteln(text, line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLParen(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRParen(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemi(line, pos); }
    Token new21(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new22(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(line, pos); }
    Token new27(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(text, line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new29(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLe(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGe(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNeq(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGets(line, pos); }
    Token new35(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdent(text, line, pos); }
    Token new36(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumberLit(text, line, pos); }
    Token new37(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStringLit(text, line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLinecmnt(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {34, 34, 6}, {36, 36, 7}, {40, 40, 8}, {41, 41, 9}, {42, 42, 10}, {43, 43, 11}, {44, 44, 12}, {45, 45, 13}, {46, 46, 14}, {47, 47, 15}, {48, 48, 16}, {49, 57, 17}, {58, 58, 18}, {59, 59, 19}, {60, 60, 20}, {61, 61, 21}, {62, 62, 22}, {65, 65, 23}, {66, 66, 24}, {67, 67, 25}, {68, 68, 23}, {69, 69, 26}, {70, 72, 23}, {73, 73, 27}, {74, 75, 23}, {76, 76, 28}, {77, 77, 29}, {78, 78, 30}, {79, 79, 31}, {80, 80, 32}, {81, 83, 23}, {84, 84, 33}, {85, 86, 23}, {87, 87, 34}, {88, 90, 23}, {95, 95, 35}, {97, 97, 23}, {98, 98, 36}, {99, 99, 37}, {100, 100, 23}, {101, 101, 38}, {102, 104, 23}, {105, 105, 39}, {106, 107, 23}, {108, 108, 40}, {109, 109, 41}, {110, 110, 42}, {111, 111, 43}, {112, 112, 44}, {113, 115, 23}, {116, 116, 45}, {117, 118, 23}, {119, 119, 46}, {120, 122, 23}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{0, 9, 47}, {11, 12, 47}, {14, 33, 47}, {34, 34, 48}, {35, 38, 47}, {40, 91, 47}, {92, 92, 49}, {93, 65535, 47}, },
            {{36, 36, 50}, {48, 57, 51}, {65, 90, 52}, {95, 95, 53}, {97, 122, 52}, },
            {},
            {},
            {},
            {},
            {},
            {{45, 45, 54}, },
            {},
            {{61, 61, 55}, },
            {},
            {{48, 48, 56}, {49, 57, 57}, },
            {{61, 61, 58}, },
            {},
            {{61, 61, 59}, },
            {},
            {{61, 61, 60}, },
            {{36, 122, -9}, },
            {{36, 57, -9}, {65, 68, 52}, {69, 69, 61}, {70, 90, 52}, {95, 95, 53}, {97, 100, 52}, {101, 101, 62}, {102, 122, 52}, },
            {{36, 57, -9}, {65, 78, 52}, {79, 79, 63}, {80, 90, 52}, {95, 95, 53}, {97, 110, 52}, {111, 111, 64}, {112, 122, 52}, },
            {{36, 57, -9}, {65, 75, 52}, {76, 76, 65}, {77, 77, 52}, {78, 78, 66}, {79, 90, 52}, {95, 95, 53}, {97, 107, 52}, {108, 108, 67}, {109, 109, 52}, {110, 110, 68}, {111, 122, 52}, },
            {{36, 57, -9}, {65, 69, 52}, {70, 70, 69}, {71, 82, 52}, {83, 83, 70}, {84, 90, 52}, {95, 95, 53}, {97, 101, 52}, {102, 102, 71}, {103, 114, 52}, {115, 115, 72}, {116, 122, 52}, },
            {{36, 78, -27}, {79, 79, 73}, {80, 110, -27}, {111, 111, 74}, {112, 122, 52}, },
            {{36, 78, -27}, {79, 79, 75}, {80, 110, -27}, {111, 111, 76}, {112, 122, 52}, },
            {{36, 57, -9}, {65, 84, 52}, {85, 85, 77}, {86, 90, 52}, {95, 95, 53}, {97, 116, 52}, {117, 117, 78}, {118, 122, 52}, },
            {{36, 84, -32}, {85, 85, 79}, {86, 116, -32}, {117, 117, 80}, {118, 122, 52}, },
            {{36, 57, -9}, {65, 81, 52}, {82, 82, 81}, {83, 90, 52}, {95, 95, 53}, {97, 113, 52}, {114, 114, 82}, {115, 122, 52}, },
            {{36, 57, -9}, {65, 71, 52}, {72, 72, 83}, {73, 90, 52}, {95, 95, 53}, {97, 103, 52}, {104, 104, 84}, {105, 122, 52}, },
            {{36, 71, -35}, {72, 72, 85}, {73, 81, 52}, {82, 82, 86}, {83, 95, -34}, {97, 103, 52}, {104, 104, 87}, {105, 113, 52}, {114, 114, 88}, {115, 122, 52}, },
            {{36, 122, -9}, },
            {{36, 122, -26}, },
            {{36, 122, -27}, },
            {{36, 122, -28}, },
            {{36, 122, -29}, },
            {{36, 122, -30}, },
            {{36, 122, -31}, },
            {{36, 122, -32}, },
            {{36, 122, -33}, },
            {{36, 122, -34}, },
            {{36, 122, -35}, },
            {{36, 122, -36}, },
            {{0, 65535, -8}, },
            {{0, 65535, -8}, },
            {{0, 33, -8}, {34, 34, 89}, {35, 38, 47}, {39, 39, 90}, {40, 91, 47}, {92, 92, 91}, {93, 109, 47}, {110, 110, 92}, {111, 115, 47}, {116, 116, 93}, {117, 65535, 47}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{0, 9, 94}, {10, 10, 95}, {11, 12, 94}, {13, 13, 96}, {14, 65535, 94}, },
            {},
            {{48, 57, 56}, },
            {{48, 57, -19}, },
            {},
            {},
            {},
            {{36, 57, -9}, {65, 70, 52}, {71, 71, 97}, {72, 90, 52}, {95, 95, 53}, {97, 102, 52}, {103, 103, 98}, {104, 122, 52}, },
            {{36, 122, -63}, },
            {{36, 57, -9}, {65, 77, 52}, {78, 78, 99}, {79, 95, -28}, {97, 109, 52}, {110, 110, 100}, {111, 122, 52}, },
            {{36, 122, -65}, },
            {{36, 57, -9}, {65, 82, 52}, {83, 83, 101}, {84, 95, -29}, {97, 114, 52}, {115, 115, 102}, {116, 122, 52}, },
            {{36, 57, -9}, {65, 67, 52}, {68, 68, 103}, {69, 90, 52}, {95, 95, 53}, {97, 99, 52}, {100, 100, 104}, {101, 122, 52}, },
            {{36, 122, -67}, },
            {{36, 122, -68}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 78, -27}, {79, 79, 105}, {80, 110, -27}, {111, 111, 106}, {112, 122, 52}, },
            {{36, 122, -75}, },
            {{36, 67, -68}, {68, 68, 107}, {69, 99, -68}, {100, 100, 108}, {101, 122, 52}, },
            {{36, 122, -77}, },
            {{36, 75, -28}, {76, 76, 109}, {77, 90, 52}, {95, 107, -28}, {108, 108, 110}, {109, 122, 52}, },
            {{36, 122, -79}, },
            {{36, 57, -9}, {65, 83, 52}, {84, 84, 111}, {85, 90, 52}, {95, 95, 53}, {97, 115, 52}, {116, 116, 112}, {117, 122, 52}, },
            {{36, 122, -81}, },
            {{36, 78, -27}, {79, 79, 113}, {80, 110, -27}, {111, 111, 114}, {112, 122, 52}, },
            {{36, 122, -83}, },
            {{36, 68, -26}, {69, 69, 115}, {70, 100, -26}, {101, 101, 116}, {102, 122, 52}, },
            {{36, 122, -85}, },
            {{36, 57, -9}, {65, 72, 52}, {73, 73, 117}, {74, 90, 52}, {95, 95, 53}, {97, 104, 52}, {105, 105, 118}, {106, 122, 52}, },
            {{36, 72, -87}, {73, 73, 119}, {74, 104, -87}, {105, 105, 120}, {106, 122, 52}, },
            {{36, 122, -87}, },
            {{36, 122, -88}, },
            {{0, 65535, -8}, },
            {{0, 65535, -8}, },
            {{0, 65535, -51}, },
            {{0, 65535, -8}, },
            {{0, 65535, -8}, },
            {{0, 65535, -56}, },
            {},
            {{10, 10, 121}, },
            {{36, 72, -87}, {73, 73, 122}, {74, 104, -87}, {105, 105, 123}, {106, 122, 52}, },
            {{36, 122, -99}, },
            {{36, 82, -67}, {83, 83, 124}, {84, 114, -67}, {115, 115, 125}, {116, 122, 52}, },
            {{36, 122, -101}, },
            {{36, 68, -26}, {69, 69, 126}, {70, 100, -26}, {101, 101, 127}, {102, 122, 52}, },
            {{36, 122, -103}, },
            {{36, 72, -87}, {73, 73, 128}, {74, 104, -87}, {105, 105, 129}, {106, 122, 52}, },
            {{36, 122, -105}, },
            {{36, 57, -9}, {65, 79, 52}, {80, 80, 130}, {81, 90, 52}, {95, 95, 53}, {97, 111, 52}, {112, 112, 131}, {113, 122, 52}, },
            {{36, 122, -107}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 75, -28}, {76, 76, 132}, {77, 107, -79}, {108, 108, 133}, {109, 122, 52}, },
            {{36, 122, -111}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 57, -9}, {65, 66, 52}, {67, 67, 134}, {68, 90, 52}, {95, 95, 53}, {97, 98, 52}, {99, 99, 135}, {100, 122, 52}, },
            {{36, 122, -115}, },
            {{36, 77, -65}, {78, 78, 136}, {79, 109, -65}, {110, 110, 137}, {111, 122, 52}, },
            {{36, 122, -117}, },
            {{36, 75, -28}, {76, 76, 138}, {77, 107, -79}, {108, 108, 139}, {109, 122, 52}, },
            {{36, 122, -119}, },
            {{36, 83, -81}, {84, 84, 140}, {85, 115, -81}, {116, 116, 141}, {117, 122, 52}, },
            {{36, 122, -121}, },
            {},
            {{36, 77, -65}, {78, 78, 142}, {79, 109, -65}, {110, 110, 143}, {111, 122, 52}, },
            {{36, 122, -124}, },
            {{36, 83, -81}, {84, 84, 144}, {85, 115, -81}, {116, 116, 145}, {117, 122, 52}, },
            {{36, 122, -126}, },
            {{36, 72, -87}, {73, 73, 146}, {74, 104, -87}, {105, 105, 147}, {106, 122, 52}, },
            {{36, 122, -128}, },
            {{36, 69, -29}, {70, 70, 148}, {71, 90, 52}, {95, 101, -29}, {102, 102, 149}, {103, 122, 52}, },
            {{36, 122, -130}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 68, -26}, {69, 69, 150}, {70, 100, -26}, {101, 101, 151}, {102, 122, 52}, },
            {{36, 122, -136}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 68, -26}, {69, 69, 152}, {70, 100, -26}, {101, 101, 153}, {102, 122, 52}, },
            {{36, 122, -140}, },
            {{36, 68, -26}, {69, 69, 154}, {70, 100, -26}, {101, 101, 155}, {102, 122, 52}, },
            {{36, 122, -142}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 57, -9}, {65, 65, 156}, {66, 90, 52}, {95, 95, 53}, {97, 97, 157}, {98, 122, 52}, },
            {{36, 122, -146}, },
            {{36, 69, -29}, {70, 70, 158}, {71, 101, -130}, {102, 102, 159}, {103, 122, 52}, },
            {{36, 122, -148}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 67, -68}, {68, 68, 160}, {69, 99, -68}, {100, 100, 161}, {101, 122, 52}, },
            {{36, 122, -152}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 75, -28}, {76, 76, 162}, {77, 107, -79}, {108, 108, 163}, {109, 122, 52}, },
            {{36, 122, -156}, },
            {{36, 77, -65}, {78, 78, 164}, {79, 109, -65}, {110, 110, 165}, {111, 122, 52}, },
            {{36, 122, -158}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 84, -32}, {85, 85, 166}, {86, 116, -32}, {117, 117, 167}, {118, 122, 52}, },
            {{36, 122, -162}, },
            {{36, 77, -65}, {78, 78, 168}, {79, 109, -65}, {110, 110, 169}, {111, 122, 52}, },
            {{36, 122, -164}, },
            {{36, 83, -81}, {84, 84, 170}, {85, 115, -81}, {116, 116, 171}, {117, 122, 52}, },
            {{36, 122, -166}, },
            {{36, 81, -34}, {82, 82, 172}, {83, 113, -34}, {114, 114, 173}, {115, 122, 52}, },
            {{36, 122, -168}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
            {{36, 68, -26}, {69, 69, 174}, {70, 100, -26}, {101, 101, 175}, {102, 122, 52}, },
            {{36, 122, -174}, },
            {{36, 122, -9}, },
            {{36, 122, -9}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {-1, 0, 0, 0, 0, 0, -1, 35, 17, 18, 25, 23, 22, 24, 19, 26, 36, 36, 21, 20, 28, 32, 29, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, -1, 37, -1, 35, 35, 35, 35, -1, 33, 36, 36, 34, 30, 31, 35, 35, 35, 35, 35, 35, 35, 35, 3, 14, 3, 14, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 35, 37, -1, -1, -1, -1, -1, 38, 38, 35, 35, 35, 35, 35, 35, 10, 10, 35, 35, 27, 27, 35, 35, 13, 13, 35, 35, 35, 35, 35, 35, 35, 35, 38, 35, 35, 35, 35, 5, 5, 35, 35, 7, 7, 2, 2, 35, 35, 4, 4, 35, 35, 35, 35, 9, 9, 35, 35, 35, 35, 11, 11, 35, 35, 8, 8, 15, 15, 35, 35, 6, 6, 35, 35, 35, 35, 35, 35, 35, 35, 16, 16, 12, 12, 35, 35, 1, 1, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
