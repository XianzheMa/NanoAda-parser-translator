/* This file was generated by SableCC (http://www.sablecc.org/). */

package nada.node;

import nada.analysis.*;

@SuppressWarnings("nls")
public final class ASubprogramBody extends PSubprogramBody
{
    private PSubprogramSpec _subprogramSpec_;
    private TIs _is_;
    private PDeclPart _declPart_;
    private TBegin _begin_;
    private PStmtSeq _stmtSeq_;
    private TEnd _end_;
    private TIdent _ident_;
    private TSemi _semi_;

    public ASubprogramBody()
    {
        // Constructor
    }

    public ASubprogramBody(
        @SuppressWarnings("hiding") PSubprogramSpec _subprogramSpec_,
        @SuppressWarnings("hiding") TIs _is_,
        @SuppressWarnings("hiding") PDeclPart _declPart_,
        @SuppressWarnings("hiding") TBegin _begin_,
        @SuppressWarnings("hiding") PStmtSeq _stmtSeq_,
        @SuppressWarnings("hiding") TEnd _end_,
        @SuppressWarnings("hiding") TIdent _ident_,
        @SuppressWarnings("hiding") TSemi _semi_)
    {
        // Constructor
        setSubprogramSpec(_subprogramSpec_);

        setIs(_is_);

        setDeclPart(_declPart_);

        setBegin(_begin_);

        setStmtSeq(_stmtSeq_);

        setEnd(_end_);

        setIdent(_ident_);

        setSemi(_semi_);

    }

    @Override
    public Object clone()
    {
        return new ASubprogramBody(
            cloneNode(this._subprogramSpec_),
            cloneNode(this._is_),
            cloneNode(this._declPart_),
            cloneNode(this._begin_),
            cloneNode(this._stmtSeq_),
            cloneNode(this._end_),
            cloneNode(this._ident_),
            cloneNode(this._semi_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASubprogramBody(this);
    }

    public PSubprogramSpec getSubprogramSpec()
    {
        return this._subprogramSpec_;
    }

    public void setSubprogramSpec(PSubprogramSpec node)
    {
        if(this._subprogramSpec_ != null)
        {
            this._subprogramSpec_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._subprogramSpec_ = node;
    }

    public TIs getIs()
    {
        return this._is_;
    }

    public void setIs(TIs node)
    {
        if(this._is_ != null)
        {
            this._is_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._is_ = node;
    }

    public PDeclPart getDeclPart()
    {
        return this._declPart_;
    }

    public void setDeclPart(PDeclPart node)
    {
        if(this._declPart_ != null)
        {
            this._declPart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declPart_ = node;
    }

    public TBegin getBegin()
    {
        return this._begin_;
    }

    public void setBegin(TBegin node)
    {
        if(this._begin_ != null)
        {
            this._begin_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._begin_ = node;
    }

    public PStmtSeq getStmtSeq()
    {
        return this._stmtSeq_;
    }

    public void setStmtSeq(PStmtSeq node)
    {
        if(this._stmtSeq_ != null)
        {
            this._stmtSeq_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stmtSeq_ = node;
    }

    public TEnd getEnd()
    {
        return this._end_;
    }

    public void setEnd(TEnd node)
    {
        if(this._end_ != null)
        {
            this._end_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._end_ = node;
    }

    public TIdent getIdent()
    {
        return this._ident_;
    }

    public void setIdent(TIdent node)
    {
        if(this._ident_ != null)
        {
            this._ident_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ident_ = node;
    }

    public TSemi getSemi()
    {
        return this._semi_;
    }

    public void setSemi(TSemi node)
    {
        if(this._semi_ != null)
        {
            this._semi_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semi_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._subprogramSpec_)
            + toString(this._is_)
            + toString(this._declPart_)
            + toString(this._begin_)
            + toString(this._stmtSeq_)
            + toString(this._end_)
            + toString(this._ident_)
            + toString(this._semi_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._subprogramSpec_ == child)
        {
            this._subprogramSpec_ = null;
            return;
        }

        if(this._is_ == child)
        {
            this._is_ = null;
            return;
        }

        if(this._declPart_ == child)
        {
            this._declPart_ = null;
            return;
        }

        if(this._begin_ == child)
        {
            this._begin_ = null;
            return;
        }

        if(this._stmtSeq_ == child)
        {
            this._stmtSeq_ = null;
            return;
        }

        if(this._end_ == child)
        {
            this._end_ = null;
            return;
        }

        if(this._ident_ == child)
        {
            this._ident_ = null;
            return;
        }

        if(this._semi_ == child)
        {
            this._semi_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._subprogramSpec_ == oldChild)
        {
            setSubprogramSpec((PSubprogramSpec) newChild);
            return;
        }

        if(this._is_ == oldChild)
        {
            setIs((TIs) newChild);
            return;
        }

        if(this._declPart_ == oldChild)
        {
            setDeclPart((PDeclPart) newChild);
            return;
        }

        if(this._begin_ == oldChild)
        {
            setBegin((TBegin) newChild);
            return;
        }

        if(this._stmtSeq_ == oldChild)
        {
            setStmtSeq((PStmtSeq) newChild);
            return;
        }

        if(this._end_ == oldChild)
        {
            setEnd((TEnd) newChild);
            return;
        }

        if(this._ident_ == oldChild)
        {
            setIdent((TIdent) newChild);
            return;
        }

        if(this._semi_ == oldChild)
        {
            setSemi((TSemi) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
